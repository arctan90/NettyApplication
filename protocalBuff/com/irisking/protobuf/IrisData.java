// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iris.proto

package com.irisking.protobuf;

/**
 * Protobuf type {@code irisking.protobuf.IrisData}
 *
 * <pre>
 *特征结构体
 * </pre>
 */
public  final class IrisData extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:irisking.protobuf.IrisData)
    IrisDataOrBuilder {
  // Use IrisData.newBuilder() to construct.
  private IrisData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private IrisData() {
    imgHight_ = 0;
    imgWidth_ = 0;
    imgType_ = 0;
    irisRow_ = 0;
    irisCol_ = 0;
    irisRadius_ = 0;
    focusScore_ = 0;
    percentVisible_ = 0;
    saturation_ = 0;
    interlaceValue_ = 0;
    qualityScore_ = 0;
    jpegImSize_ = 0;
    imgData_ = com.google.protobuf.ByteString.EMPTY;
    unknowInfo_ = com.google.protobuf.ByteString.EMPTY;
    irisEnrTemplate_ = com.google.protobuf.ByteString.EMPTY;
    irisRecTemplate_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private IrisData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            imgHight_ = input.readUInt32();
            break;
          }
          case 16: {

            imgWidth_ = input.readUInt32();
            break;
          }
          case 24: {

            imgType_ = input.readUInt32();
            break;
          }
          case 32: {

            irisRow_ = input.readUInt32();
            break;
          }
          case 40: {

            irisCol_ = input.readUInt32();
            break;
          }
          case 48: {

            irisRadius_ = input.readUInt32();
            break;
          }
          case 56: {

            focusScore_ = input.readUInt32();
            break;
          }
          case 64: {

            percentVisible_ = input.readUInt32();
            break;
          }
          case 72: {

            saturation_ = input.readUInt32();
            break;
          }
          case 80: {

            interlaceValue_ = input.readUInt32();
            break;
          }
          case 88: {

            qualityScore_ = input.readUInt32();
            break;
          }
          case 96: {

            jpegImSize_ = input.readUInt32();
            break;
          }
          case 106: {

            imgData_ = input.readBytes();
            break;
          }
          case 114: {

            unknowInfo_ = input.readBytes();
            break;
          }
          case 122: {

            irisEnrTemplate_ = input.readBytes();
            break;
          }
          case 130: {

            irisRecTemplate_ = input.readBytes();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.irisking.protobuf.ProtoMsg.internal_static_irisking_protobuf_IrisData_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.irisking.protobuf.ProtoMsg.internal_static_irisking_protobuf_IrisData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.irisking.protobuf.IrisData.class, com.irisking.protobuf.IrisData.Builder.class);
  }

  public static final int IMGHIGHT_FIELD_NUMBER = 1;
  private int imgHight_;
  /**
   * <code>optional uint32 imgHight = 1;</code>
   */
  public int getImgHight() {
    return imgHight_;
  }

  public static final int IMGWIDTH_FIELD_NUMBER = 2;
  private int imgWidth_;
  /**
   * <code>optional uint32 imgWidth = 2;</code>
   */
  public int getImgWidth() {
    return imgWidth_;
  }

  public static final int IMGTYPE_FIELD_NUMBER = 3;
  private int imgType_;
  /**
   * <code>optional uint32 imgType = 3;</code>
   */
  public int getImgType() {
    return imgType_;
  }

  public static final int IRISROW_FIELD_NUMBER = 4;
  private int irisRow_;
  /**
   * <code>optional uint32 irisRow = 4;</code>
   */
  public int getIrisRow() {
    return irisRow_;
  }

  public static final int IRISCOL_FIELD_NUMBER = 5;
  private int irisCol_;
  /**
   * <code>optional uint32 irisCol = 5;</code>
   */
  public int getIrisCol() {
    return irisCol_;
  }

  public static final int IRISRADIUS_FIELD_NUMBER = 6;
  private int irisRadius_;
  /**
   * <code>optional uint32 irisRadius = 6;</code>
   */
  public int getIrisRadius() {
    return irisRadius_;
  }

  public static final int FOCUSSCORE_FIELD_NUMBER = 7;
  private int focusScore_;
  /**
   * <code>optional uint32 focusScore = 7;</code>
   */
  public int getFocusScore() {
    return focusScore_;
  }

  public static final int PERCENTVISIBLE_FIELD_NUMBER = 8;
  private int percentVisible_;
  /**
   * <code>optional uint32 percentVisible = 8;</code>
   */
  public int getPercentVisible() {
    return percentVisible_;
  }

  public static final int SATURATION_FIELD_NUMBER = 9;
  private int saturation_;
  /**
   * <code>optional uint32 saturation = 9;</code>
   */
  public int getSaturation() {
    return saturation_;
  }

  public static final int INTERLACEVALUE_FIELD_NUMBER = 10;
  private int interlaceValue_;
  /**
   * <code>optional uint32 interlaceValue = 10;</code>
   */
  public int getInterlaceValue() {
    return interlaceValue_;
  }

  public static final int QUALITYSCORE_FIELD_NUMBER = 11;
  private int qualityScore_;
  /**
   * <code>optional uint32 qualityScore = 11;</code>
   */
  public int getQualityScore() {
    return qualityScore_;
  }

  public static final int JPEGIMSIZE_FIELD_NUMBER = 12;
  private int jpegImSize_;
  /**
   * <code>optional uint32 jpegImSize = 12;</code>
   */
  public int getJpegImSize() {
    return jpegImSize_;
  }

  public static final int IMGDATA_FIELD_NUMBER = 13;
  private com.google.protobuf.ByteString imgData_;
  /**
   * <code>optional bytes imgData = 13;</code>
   */
  public com.google.protobuf.ByteString getImgData() {
    return imgData_;
  }

  public static final int UNKNOWINFO_FIELD_NUMBER = 14;
  private com.google.protobuf.ByteString unknowInfo_;
  /**
   * <code>optional bytes unknowInfo = 14;</code>
   */
  public com.google.protobuf.ByteString getUnknowInfo() {
    return unknowInfo_;
  }

  public static final int IRISENRTEMPLATE_FIELD_NUMBER = 15;
  private com.google.protobuf.ByteString irisEnrTemplate_;
  /**
   * <code>optional bytes irisEnrTemplate = 15;</code>
   */
  public com.google.protobuf.ByteString getIrisEnrTemplate() {
    return irisEnrTemplate_;
  }

  public static final int IRISRECTEMPLATE_FIELD_NUMBER = 16;
  private com.google.protobuf.ByteString irisRecTemplate_;
  /**
   * <code>optional bytes irisRecTemplate = 16;</code>
   */
  public com.google.protobuf.ByteString getIrisRecTemplate() {
    return irisRecTemplate_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (imgHight_ != 0) {
      output.writeUInt32(1, imgHight_);
    }
    if (imgWidth_ != 0) {
      output.writeUInt32(2, imgWidth_);
    }
    if (imgType_ != 0) {
      output.writeUInt32(3, imgType_);
    }
    if (irisRow_ != 0) {
      output.writeUInt32(4, irisRow_);
    }
    if (irisCol_ != 0) {
      output.writeUInt32(5, irisCol_);
    }
    if (irisRadius_ != 0) {
      output.writeUInt32(6, irisRadius_);
    }
    if (focusScore_ != 0) {
      output.writeUInt32(7, focusScore_);
    }
    if (percentVisible_ != 0) {
      output.writeUInt32(8, percentVisible_);
    }
    if (saturation_ != 0) {
      output.writeUInt32(9, saturation_);
    }
    if (interlaceValue_ != 0) {
      output.writeUInt32(10, interlaceValue_);
    }
    if (qualityScore_ != 0) {
      output.writeUInt32(11, qualityScore_);
    }
    if (jpegImSize_ != 0) {
      output.writeUInt32(12, jpegImSize_);
    }
    if (!imgData_.isEmpty()) {
      output.writeBytes(13, imgData_);
    }
    if (!unknowInfo_.isEmpty()) {
      output.writeBytes(14, unknowInfo_);
    }
    if (!irisEnrTemplate_.isEmpty()) {
      output.writeBytes(15, irisEnrTemplate_);
    }
    if (!irisRecTemplate_.isEmpty()) {
      output.writeBytes(16, irisRecTemplate_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (imgHight_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, imgHight_);
    }
    if (imgWidth_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, imgWidth_);
    }
    if (imgType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, imgType_);
    }
    if (irisRow_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, irisRow_);
    }
    if (irisCol_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, irisCol_);
    }
    if (irisRadius_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, irisRadius_);
    }
    if (focusScore_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, focusScore_);
    }
    if (percentVisible_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(8, percentVisible_);
    }
    if (saturation_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(9, saturation_);
    }
    if (interlaceValue_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(10, interlaceValue_);
    }
    if (qualityScore_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(11, qualityScore_);
    }
    if (jpegImSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(12, jpegImSize_);
    }
    if (!imgData_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(13, imgData_);
    }
    if (!unknowInfo_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(14, unknowInfo_);
    }
    if (!irisEnrTemplate_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(15, irisEnrTemplate_);
    }
    if (!irisRecTemplate_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(16, irisRecTemplate_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.irisking.protobuf.IrisData)) {
      return super.equals(obj);
    }
    com.irisking.protobuf.IrisData other = (com.irisking.protobuf.IrisData) obj;

    boolean result = true;
    result = result && (getImgHight()
        == other.getImgHight());
    result = result && (getImgWidth()
        == other.getImgWidth());
    result = result && (getImgType()
        == other.getImgType());
    result = result && (getIrisRow()
        == other.getIrisRow());
    result = result && (getIrisCol()
        == other.getIrisCol());
    result = result && (getIrisRadius()
        == other.getIrisRadius());
    result = result && (getFocusScore()
        == other.getFocusScore());
    result = result && (getPercentVisible()
        == other.getPercentVisible());
    result = result && (getSaturation()
        == other.getSaturation());
    result = result && (getInterlaceValue()
        == other.getInterlaceValue());
    result = result && (getQualityScore()
        == other.getQualityScore());
    result = result && (getJpegImSize()
        == other.getJpegImSize());
    result = result && getImgData()
        .equals(other.getImgData());
    result = result && getUnknowInfo()
        .equals(other.getUnknowInfo());
    result = result && getIrisEnrTemplate()
        .equals(other.getIrisEnrTemplate());
    result = result && getIrisRecTemplate()
        .equals(other.getIrisRecTemplate());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + IMGHIGHT_FIELD_NUMBER;
    hash = (53 * hash) + getImgHight();
    hash = (37 * hash) + IMGWIDTH_FIELD_NUMBER;
    hash = (53 * hash) + getImgWidth();
    hash = (37 * hash) + IMGTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getImgType();
    hash = (37 * hash) + IRISROW_FIELD_NUMBER;
    hash = (53 * hash) + getIrisRow();
    hash = (37 * hash) + IRISCOL_FIELD_NUMBER;
    hash = (53 * hash) + getIrisCol();
    hash = (37 * hash) + IRISRADIUS_FIELD_NUMBER;
    hash = (53 * hash) + getIrisRadius();
    hash = (37 * hash) + FOCUSSCORE_FIELD_NUMBER;
    hash = (53 * hash) + getFocusScore();
    hash = (37 * hash) + PERCENTVISIBLE_FIELD_NUMBER;
    hash = (53 * hash) + getPercentVisible();
    hash = (37 * hash) + SATURATION_FIELD_NUMBER;
    hash = (53 * hash) + getSaturation();
    hash = (37 * hash) + INTERLACEVALUE_FIELD_NUMBER;
    hash = (53 * hash) + getInterlaceValue();
    hash = (37 * hash) + QUALITYSCORE_FIELD_NUMBER;
    hash = (53 * hash) + getQualityScore();
    hash = (37 * hash) + JPEGIMSIZE_FIELD_NUMBER;
    hash = (53 * hash) + getJpegImSize();
    hash = (37 * hash) + IMGDATA_FIELD_NUMBER;
    hash = (53 * hash) + getImgData().hashCode();
    hash = (37 * hash) + UNKNOWINFO_FIELD_NUMBER;
    hash = (53 * hash) + getUnknowInfo().hashCode();
    hash = (37 * hash) + IRISENRTEMPLATE_FIELD_NUMBER;
    hash = (53 * hash) + getIrisEnrTemplate().hashCode();
    hash = (37 * hash) + IRISRECTEMPLATE_FIELD_NUMBER;
    hash = (53 * hash) + getIrisRecTemplate().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.irisking.protobuf.IrisData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.irisking.protobuf.IrisData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.irisking.protobuf.IrisData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.irisking.protobuf.IrisData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.irisking.protobuf.IrisData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.irisking.protobuf.IrisData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.irisking.protobuf.IrisData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.irisking.protobuf.IrisData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.irisking.protobuf.IrisData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.irisking.protobuf.IrisData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.irisking.protobuf.IrisData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code irisking.protobuf.IrisData}
   *
   * <pre>
   *特征结构体
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:irisking.protobuf.IrisData)
      com.irisking.protobuf.IrisDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.irisking.protobuf.ProtoMsg.internal_static_irisking_protobuf_IrisData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.irisking.protobuf.ProtoMsg.internal_static_irisking_protobuf_IrisData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.irisking.protobuf.IrisData.class, com.irisking.protobuf.IrisData.Builder.class);
    }

    // Construct using com.irisking.protobuf.IrisData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      imgHight_ = 0;

      imgWidth_ = 0;

      imgType_ = 0;

      irisRow_ = 0;

      irisCol_ = 0;

      irisRadius_ = 0;

      focusScore_ = 0;

      percentVisible_ = 0;

      saturation_ = 0;

      interlaceValue_ = 0;

      qualityScore_ = 0;

      jpegImSize_ = 0;

      imgData_ = com.google.protobuf.ByteString.EMPTY;

      unknowInfo_ = com.google.protobuf.ByteString.EMPTY;

      irisEnrTemplate_ = com.google.protobuf.ByteString.EMPTY;

      irisRecTemplate_ = com.google.protobuf.ByteString.EMPTY;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.irisking.protobuf.ProtoMsg.internal_static_irisking_protobuf_IrisData_descriptor;
    }

    public com.irisking.protobuf.IrisData getDefaultInstanceForType() {
      return com.irisking.protobuf.IrisData.getDefaultInstance();
    }

    public com.irisking.protobuf.IrisData build() {
      com.irisking.protobuf.IrisData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.irisking.protobuf.IrisData buildPartial() {
      com.irisking.protobuf.IrisData result = new com.irisking.protobuf.IrisData(this);
      result.imgHight_ = imgHight_;
      result.imgWidth_ = imgWidth_;
      result.imgType_ = imgType_;
      result.irisRow_ = irisRow_;
      result.irisCol_ = irisCol_;
      result.irisRadius_ = irisRadius_;
      result.focusScore_ = focusScore_;
      result.percentVisible_ = percentVisible_;
      result.saturation_ = saturation_;
      result.interlaceValue_ = interlaceValue_;
      result.qualityScore_ = qualityScore_;
      result.jpegImSize_ = jpegImSize_;
      result.imgData_ = imgData_;
      result.unknowInfo_ = unknowInfo_;
      result.irisEnrTemplate_ = irisEnrTemplate_;
      result.irisRecTemplate_ = irisRecTemplate_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.irisking.protobuf.IrisData) {
        return mergeFrom((com.irisking.protobuf.IrisData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.irisking.protobuf.IrisData other) {
      if (other == com.irisking.protobuf.IrisData.getDefaultInstance()) return this;
      if (other.getImgHight() != 0) {
        setImgHight(other.getImgHight());
      }
      if (other.getImgWidth() != 0) {
        setImgWidth(other.getImgWidth());
      }
      if (other.getImgType() != 0) {
        setImgType(other.getImgType());
      }
      if (other.getIrisRow() != 0) {
        setIrisRow(other.getIrisRow());
      }
      if (other.getIrisCol() != 0) {
        setIrisCol(other.getIrisCol());
      }
      if (other.getIrisRadius() != 0) {
        setIrisRadius(other.getIrisRadius());
      }
      if (other.getFocusScore() != 0) {
        setFocusScore(other.getFocusScore());
      }
      if (other.getPercentVisible() != 0) {
        setPercentVisible(other.getPercentVisible());
      }
      if (other.getSaturation() != 0) {
        setSaturation(other.getSaturation());
      }
      if (other.getInterlaceValue() != 0) {
        setInterlaceValue(other.getInterlaceValue());
      }
      if (other.getQualityScore() != 0) {
        setQualityScore(other.getQualityScore());
      }
      if (other.getJpegImSize() != 0) {
        setJpegImSize(other.getJpegImSize());
      }
      if (other.getImgData() != com.google.protobuf.ByteString.EMPTY) {
        setImgData(other.getImgData());
      }
      if (other.getUnknowInfo() != com.google.protobuf.ByteString.EMPTY) {
        setUnknowInfo(other.getUnknowInfo());
      }
      if (other.getIrisEnrTemplate() != com.google.protobuf.ByteString.EMPTY) {
        setIrisEnrTemplate(other.getIrisEnrTemplate());
      }
      if (other.getIrisRecTemplate() != com.google.protobuf.ByteString.EMPTY) {
        setIrisRecTemplate(other.getIrisRecTemplate());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.irisking.protobuf.IrisData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.irisking.protobuf.IrisData) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int imgHight_ ;
    /**
     * <code>optional uint32 imgHight = 1;</code>
     */
    public int getImgHight() {
      return imgHight_;
    }
    /**
     * <code>optional uint32 imgHight = 1;</code>
     */
    public Builder setImgHight(int value) {
      
      imgHight_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 imgHight = 1;</code>
     */
    public Builder clearImgHight() {
      
      imgHight_ = 0;
      onChanged();
      return this;
    }

    private int imgWidth_ ;
    /**
     * <code>optional uint32 imgWidth = 2;</code>
     */
    public int getImgWidth() {
      return imgWidth_;
    }
    /**
     * <code>optional uint32 imgWidth = 2;</code>
     */
    public Builder setImgWidth(int value) {
      
      imgWidth_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 imgWidth = 2;</code>
     */
    public Builder clearImgWidth() {
      
      imgWidth_ = 0;
      onChanged();
      return this;
    }

    private int imgType_ ;
    /**
     * <code>optional uint32 imgType = 3;</code>
     */
    public int getImgType() {
      return imgType_;
    }
    /**
     * <code>optional uint32 imgType = 3;</code>
     */
    public Builder setImgType(int value) {
      
      imgType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 imgType = 3;</code>
     */
    public Builder clearImgType() {
      
      imgType_ = 0;
      onChanged();
      return this;
    }

    private int irisRow_ ;
    /**
     * <code>optional uint32 irisRow = 4;</code>
     */
    public int getIrisRow() {
      return irisRow_;
    }
    /**
     * <code>optional uint32 irisRow = 4;</code>
     */
    public Builder setIrisRow(int value) {
      
      irisRow_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 irisRow = 4;</code>
     */
    public Builder clearIrisRow() {
      
      irisRow_ = 0;
      onChanged();
      return this;
    }

    private int irisCol_ ;
    /**
     * <code>optional uint32 irisCol = 5;</code>
     */
    public int getIrisCol() {
      return irisCol_;
    }
    /**
     * <code>optional uint32 irisCol = 5;</code>
     */
    public Builder setIrisCol(int value) {
      
      irisCol_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 irisCol = 5;</code>
     */
    public Builder clearIrisCol() {
      
      irisCol_ = 0;
      onChanged();
      return this;
    }

    private int irisRadius_ ;
    /**
     * <code>optional uint32 irisRadius = 6;</code>
     */
    public int getIrisRadius() {
      return irisRadius_;
    }
    /**
     * <code>optional uint32 irisRadius = 6;</code>
     */
    public Builder setIrisRadius(int value) {
      
      irisRadius_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 irisRadius = 6;</code>
     */
    public Builder clearIrisRadius() {
      
      irisRadius_ = 0;
      onChanged();
      return this;
    }

    private int focusScore_ ;
    /**
     * <code>optional uint32 focusScore = 7;</code>
     */
    public int getFocusScore() {
      return focusScore_;
    }
    /**
     * <code>optional uint32 focusScore = 7;</code>
     */
    public Builder setFocusScore(int value) {
      
      focusScore_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 focusScore = 7;</code>
     */
    public Builder clearFocusScore() {
      
      focusScore_ = 0;
      onChanged();
      return this;
    }

    private int percentVisible_ ;
    /**
     * <code>optional uint32 percentVisible = 8;</code>
     */
    public int getPercentVisible() {
      return percentVisible_;
    }
    /**
     * <code>optional uint32 percentVisible = 8;</code>
     */
    public Builder setPercentVisible(int value) {
      
      percentVisible_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 percentVisible = 8;</code>
     */
    public Builder clearPercentVisible() {
      
      percentVisible_ = 0;
      onChanged();
      return this;
    }

    private int saturation_ ;
    /**
     * <code>optional uint32 saturation = 9;</code>
     */
    public int getSaturation() {
      return saturation_;
    }
    /**
     * <code>optional uint32 saturation = 9;</code>
     */
    public Builder setSaturation(int value) {
      
      saturation_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 saturation = 9;</code>
     */
    public Builder clearSaturation() {
      
      saturation_ = 0;
      onChanged();
      return this;
    }

    private int interlaceValue_ ;
    /**
     * <code>optional uint32 interlaceValue = 10;</code>
     */
    public int getInterlaceValue() {
      return interlaceValue_;
    }
    /**
     * <code>optional uint32 interlaceValue = 10;</code>
     */
    public Builder setInterlaceValue(int value) {
      
      interlaceValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 interlaceValue = 10;</code>
     */
    public Builder clearInterlaceValue() {
      
      interlaceValue_ = 0;
      onChanged();
      return this;
    }

    private int qualityScore_ ;
    /**
     * <code>optional uint32 qualityScore = 11;</code>
     */
    public int getQualityScore() {
      return qualityScore_;
    }
    /**
     * <code>optional uint32 qualityScore = 11;</code>
     */
    public Builder setQualityScore(int value) {
      
      qualityScore_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 qualityScore = 11;</code>
     */
    public Builder clearQualityScore() {
      
      qualityScore_ = 0;
      onChanged();
      return this;
    }

    private int jpegImSize_ ;
    /**
     * <code>optional uint32 jpegImSize = 12;</code>
     */
    public int getJpegImSize() {
      return jpegImSize_;
    }
    /**
     * <code>optional uint32 jpegImSize = 12;</code>
     */
    public Builder setJpegImSize(int value) {
      
      jpegImSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 jpegImSize = 12;</code>
     */
    public Builder clearJpegImSize() {
      
      jpegImSize_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString imgData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes imgData = 13;</code>
     */
    public com.google.protobuf.ByteString getImgData() {
      return imgData_;
    }
    /**
     * <code>optional bytes imgData = 13;</code>
     */
    public Builder setImgData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      imgData_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes imgData = 13;</code>
     */
    public Builder clearImgData() {
      
      imgData_ = getDefaultInstance().getImgData();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString unknowInfo_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes unknowInfo = 14;</code>
     */
    public com.google.protobuf.ByteString getUnknowInfo() {
      return unknowInfo_;
    }
    /**
     * <code>optional bytes unknowInfo = 14;</code>
     */
    public Builder setUnknowInfo(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      unknowInfo_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes unknowInfo = 14;</code>
     */
    public Builder clearUnknowInfo() {
      
      unknowInfo_ = getDefaultInstance().getUnknowInfo();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString irisEnrTemplate_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes irisEnrTemplate = 15;</code>
     */
    public com.google.protobuf.ByteString getIrisEnrTemplate() {
      return irisEnrTemplate_;
    }
    /**
     * <code>optional bytes irisEnrTemplate = 15;</code>
     */
    public Builder setIrisEnrTemplate(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      irisEnrTemplate_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes irisEnrTemplate = 15;</code>
     */
    public Builder clearIrisEnrTemplate() {
      
      irisEnrTemplate_ = getDefaultInstance().getIrisEnrTemplate();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString irisRecTemplate_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes irisRecTemplate = 16;</code>
     */
    public com.google.protobuf.ByteString getIrisRecTemplate() {
      return irisRecTemplate_;
    }
    /**
     * <code>optional bytes irisRecTemplate = 16;</code>
     */
    public Builder setIrisRecTemplate(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      irisRecTemplate_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes irisRecTemplate = 16;</code>
     */
    public Builder clearIrisRecTemplate() {
      
      irisRecTemplate_ = getDefaultInstance().getIrisRecTemplate();
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:irisking.protobuf.IrisData)
  }

  // @@protoc_insertion_point(class_scope:irisking.protobuf.IrisData)
  private static final com.irisking.protobuf.IrisData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.irisking.protobuf.IrisData();
  }

  public static com.irisking.protobuf.IrisData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IrisData>
      PARSER = new com.google.protobuf.AbstractParser<IrisData>() {
    public IrisData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new IrisData(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<IrisData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IrisData> getParserForType() {
    return PARSER;
  }

  public com.irisking.protobuf.IrisData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

